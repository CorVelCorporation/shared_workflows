name: Build and Deploy

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-20.04
    environment: dev
 
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: php-actions/composer@v6
        with:
          php_version: "7.4"
          php_extensions: gd zip pdo_mysql
          command: config
          args: --no-plugins allow-plugins.roots/wordpress-core-installer true

      - name: Composer config
        uses: php-actions/composer@v6
        with:
          command: config
          args: --no-plugins allow-plugins.composer/installers true

      - name: Composer validate
        uses: php-actions/composer@v6
        with:
          command: validate

      - name: Composer install
        uses: php-actions/composer@v6

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          REMOTE_HOST: ${{ vars.REMOTE_HOST }}
          REMOTE_USER: ${{ vars.REMOTE_USER }}
          TARGET: ${{ vars.REMOTE_BASE }}/deploy-cache
          EXCLUDE: ".git*, /web/app/uploads"

      - name: Post-deployment script
        uses: appleboy/ssh-action@v0.1.10
        env:
          COMMIT_HASH: ${{ github.sha }}
          TARGET_DIR: ${{ vars.REMOTE_BASE }}
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ vars.REMOTE_HOST }}
          username: ${{ vars.REMOTE_USER }}
          envs: COMMIT_HASH,TARGET_DIR
          script: |
            cd ${TARGET_DIR}
            find deploy-cache -not -perm -g=w -exec chmod -R g+w {} \;
            if [ ! -d "releases/${COMMIT_HASH}" ]
            then
            echo "Creating: releases/${COMMIT_HASH}"
            cp -dR deploy-cache releases/${COMMIT_HASH}
            fi
            echo "Linking current to revision: ${COMMIT_HASH}"
            rm -f current
            ln -s releases/${COMMIT_HASH} current
            echo "Removing old releases"
            # cd releases && ls -1t | tail -n +11 | xargs rm -rf
            # find . -not -perm -g=w -exec chmod -R g+w {} \;
